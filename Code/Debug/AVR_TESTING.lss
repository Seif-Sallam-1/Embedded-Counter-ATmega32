
AVR_TESTING.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005dc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000005dc  00000650  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000012  00000000  00000000  00000650  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000664  2**2
                  CONTENTS, READONLY, OCTETS
  4 .debug_aranges 00000040  00000000  00000000  000006a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_info   00000754  00000000  00000000  000006e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_abbrev 000005cb  00000000  00000000  00000e34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00000306  00000000  00000000  000013ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_frame  00000034  00000000  00000000  00001708  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    00000366  00000000  00000000  0000173c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 00000122  00000000  00000000  00001aa2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_rnglists 00000014  00000000  00000000  00001bc4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63

00000058 <__init_sp>:
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__call_main>:
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 ec 02 	jmp	0x5d8	; 0x5d8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
  6c:	cf 93       	push	r28
  6e:	df 93       	push	r29
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	aa 97       	sbiw	r28, 0x2a	; 42
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <.Loc.1>:
	DDRC  |= 0x07;	 // Configure the first 3-pins in PORTC as output pins
  80:	84 e3       	ldi	r24, 0x34	; 52
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	fc 01       	movw	r30, r24
  86:	20 81       	ld	r18, Z
  88:	84 e3       	ldi	r24, 0x34	; 52
  8a:	90 e0       	ldi	r25, 0x00	; 0

0000008c <.Loc.2>:
  8c:	27 60       	ori	r18, 0x07	; 7
  8e:	fc 01       	movw	r30, r24
  90:	20 83       	st	Z, r18

00000092 <.Loc.3>:
	PORTC &= 0xF8;   // Turn off the 3-leds at the beginning by clear the first 3-bits in PORTC
  92:	85 e3       	ldi	r24, 0x35	; 53
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	fc 01       	movw	r30, r24
  98:	20 81       	ld	r18, Z

0000009a <.Loc.4>:
  9a:	85 e3       	ldi	r24, 0x35	; 53
  9c:	90 e0       	ldi	r25, 0x00	; 0

0000009e <.Loc.5>:
  9e:	28 7f       	andi	r18, 0xF8	; 248
  a0:	fc 01       	movw	r30, r24
  a2:	20 83       	st	Z, r18

000000a4 <.L26>:

	while(1)
	{
		PORTC = (PORTC & 0xF8) | 0x01;   // Turn on the first led only (PC0=1,PC1=0,PC2=0)
  a4:	85 e3       	ldi	r24, 0x35	; 53
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	fc 01       	movw	r30, r24
  aa:	80 81       	ld	r24, Z

000000ac <.Loc.7>:
  ac:	88 7f       	andi	r24, 0xF8	; 248

000000ae <.Loc.8>:
  ae:	28 2f       	mov	r18, r24
  b0:	21 60       	ori	r18, 0x01	; 1

000000b2 <.Loc.9>:
  b2:	85 e3       	ldi	r24, 0x35	; 53
  b4:	90 e0       	ldi	r25, 0x00	; 0

000000b6 <.Loc.10>:
  b6:	fc 01       	movw	r30, r24
  b8:	20 83       	st	Z, r18
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	aa ef       	ldi	r26, 0xFA	; 250
  c0:	b3 e4       	ldi	r27, 0x43	; 67
  c2:	8d 8f       	std	Y+29, r24	; 0x1d
  c4:	9e 8f       	std	Y+30, r25	; 0x1e
  c6:	af 8f       	std	Y+31, r26	; 0x1f
  c8:	b8 a3       	std	Y+32, r27	; 0x20

000000ca <.LBB24>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
  ca:	20 e0       	ldi	r18, 0x00	; 0
  cc:	30 e0       	ldi	r19, 0x00	; 0
  ce:	4a e7       	ldi	r20, 0x7A	; 122
  d0:	55 e4       	ldi	r21, 0x45	; 69
  d2:	6d 8d       	ldd	r22, Y+29	; 0x1d
  d4:	7e 8d       	ldd	r23, Y+30	; 0x1e
  d6:	8f 8d       	ldd	r24, Y+31	; 0x1f
  d8:	98 a1       	ldd	r25, Y+32	; 0x20
  da:	0e 94 57 02 	call	0x4ae	; 0x4ae <__mulsf3>
  de:	dc 01       	movw	r26, r24
  e0:	cb 01       	movw	r24, r22
  e2:	89 a3       	std	Y+33, r24	; 0x21
  e4:	9a a3       	std	Y+34, r25	; 0x22
  e6:	ab a3       	std	Y+35, r26	; 0x23
  e8:	bc a3       	std	Y+36, r27	; 0x24

000000ea <.Loc.12>:
	if (__tmp < 1.0)
  ea:	20 e0       	ldi	r18, 0x00	; 0
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	40 e8       	ldi	r20, 0x80	; 128
  f0:	5f e3       	ldi	r21, 0x3F	; 63
  f2:	69 a1       	ldd	r22, Y+33	; 0x21
  f4:	7a a1       	ldd	r23, Y+34	; 0x22
  f6:	8b a1       	ldd	r24, Y+35	; 0x23
  f8:	9c a1       	ldd	r25, Y+36	; 0x24
  fa:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__cmpsf2>
  fe:	81 15       	cp	r24, r1
 100:	2c f4       	brge	.+10     	; 0x10c <.L33>

00000102 <.Loc.13>:
		__ticks = 1;
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	9e a3       	std	Y+38, r25	; 0x26
 108:	8d a3       	std	Y+37, r24	; 0x25
 10a:	40 c0       	rjmp	.+128    	; 0x18c <.L4>

0000010c <.L33>:
	else if (__tmp > 65535)
 10c:	20 e0       	ldi	r18, 0x00	; 0
 10e:	3f ef       	ldi	r19, 0xFF	; 255
 110:	4f e7       	ldi	r20, 0x7F	; 127
 112:	57 e4       	ldi	r21, 0x47	; 71
 114:	69 a1       	ldd	r22, Y+33	; 0x21
 116:	7a a1       	ldd	r23, Y+34	; 0x22
 118:	8b a1       	ldd	r24, Y+35	; 0x23
 11a:	9c a1       	ldd	r25, Y+36	; 0x24
 11c:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__gesf2>
 120:	81 30       	cpi	r24, 0x01	; 1
 122:	54 f1       	brlt	.+84     	; 0x178 <.L34>

00000124 <.Loc.15>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 124:	20 e0       	ldi	r18, 0x00	; 0
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	40 e2       	ldi	r20, 0x20	; 32
 12a:	51 e4       	ldi	r21, 0x41	; 65
 12c:	6d 8d       	ldd	r22, Y+29	; 0x1d
 12e:	7e 8d       	ldd	r23, Y+30	; 0x1e
 130:	8f 8d       	ldd	r24, Y+31	; 0x1f
 132:	98 a1       	ldd	r25, Y+32	; 0x20
 134:	0e 94 57 02 	call	0x4ae	; 0x4ae <__mulsf3>
 138:	dc 01       	movw	r26, r24
 13a:	cb 01       	movw	r24, r22

0000013c <.Loc.16>:
 13c:	bc 01       	movw	r22, r24
 13e:	cd 01       	movw	r24, r26
 140:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fixunssfsi>
 144:	dc 01       	movw	r26, r24
 146:	cb 01       	movw	r24, r22
 148:	9e a3       	std	Y+38, r25	; 0x26
 14a:	8d a3       	std	Y+37, r24	; 0x25

0000014c <.Loc.17>:
		while(__ticks)
 14c:	10 c0       	rjmp	.+32     	; 0x16e <.L7>

0000014e <.L8>:
 14e:	80 e9       	ldi	r24, 0x90	; 144
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	98 a7       	std	Y+40, r25	; 0x28
 154:	8f a3       	std	Y+39, r24	; 0x27

00000156 <.LBB26>:
		"   sbci %B0,0" "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 156:	8f a1       	ldd	r24, Y+39	; 0x27
 158:	98 a5       	ldd	r25, Y+40	; 0x28

0000015a <.L1^B1>:
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <.L1^B1>
 15e:	98 a7       	std	Y+40, r25	; 0x28
 160:	8f a3       	std	Y+39, r24	; 0x27

00000162 <.Loc.19>:
	...

00000164 <.LBE26>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 164:	8d a1       	ldd	r24, Y+37	; 0x25
 166:	9e a1       	ldd	r25, Y+38	; 0x26
 168:	01 97       	sbiw	r24, 0x01	; 1
 16a:	9e a3       	std	Y+38, r25	; 0x26
 16c:	8d a3       	std	Y+37, r24	; 0x25

0000016e <.L7>:
		while(__ticks)
 16e:	8d a1       	ldd	r24, Y+37	; 0x25
 170:	9e a1       	ldd	r25, Y+38	; 0x26
 172:	00 97       	sbiw	r24, 0x00	; 0
 174:	61 f7       	brne	.-40     	; 0x14e <.L8>

00000176 <.Loc.22>:
		}
		return;
 176:	15 c0       	rjmp	.+42     	; 0x1a2 <.L9>

00000178 <.L34>:
	}
	else
		__ticks = (uint16_t)__tmp;
 178:	69 a1       	ldd	r22, Y+33	; 0x21
 17a:	7a a1       	ldd	r23, Y+34	; 0x22
 17c:	8b a1       	ldd	r24, Y+35	; 0x23
 17e:	9c a1       	ldd	r25, Y+36	; 0x24
 180:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fixunssfsi>
 184:	dc 01       	movw	r26, r24
 186:	cb 01       	movw	r24, r22
 188:	9e a3       	std	Y+38, r25	; 0x26
 18a:	8d a3       	std	Y+37, r24	; 0x25

0000018c <.L4>:
 18c:	8d a1       	ldd	r24, Y+37	; 0x25
 18e:	9e a1       	ldd	r25, Y+38	; 0x26
 190:	9a a7       	std	Y+42, r25	; 0x2a
 192:	89 a7       	std	Y+41, r24	; 0x29

00000194 <.LBB28>:
 194:	89 a5       	ldd	r24, Y+41	; 0x29
 196:	9a a5       	ldd	r25, Y+42	; 0x2a

00000198 <.L1^B2>:
 198:	01 97       	sbiw	r24, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <.L1^B2>
 19c:	9a a7       	std	Y+42, r25	; 0x2a
 19e:	89 a7       	std	Y+41, r24	; 0x29

000001a0 <.Loc.25>:
	...

000001a2 <.L9>:
		_delay_ms(500);

		PORTC = (PORTC & 0xF8) | 0x02;   // Turn on the second led only (PC0=0,PC1=1,PC2=0)
 1a2:	85 e3       	ldi	r24, 0x35	; 53
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	fc 01       	movw	r30, r24
 1a8:	80 81       	ld	r24, Z

000001aa <.Loc.27>:
 1aa:	88 7f       	andi	r24, 0xF8	; 248

000001ac <.Loc.28>:
 1ac:	28 2f       	mov	r18, r24
 1ae:	22 60       	ori	r18, 0x02	; 2

000001b0 <.Loc.29>:
 1b0:	85 e3       	ldi	r24, 0x35	; 53
 1b2:	90 e0       	ldi	r25, 0x00	; 0

000001b4 <.Loc.30>:
 1b4:	fc 01       	movw	r30, r24
 1b6:	20 83       	st	Z, r18
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	aa ef       	ldi	r26, 0xFA	; 250
 1be:	b3 e4       	ldi	r27, 0x43	; 67
 1c0:	8f 87       	std	Y+15, r24	; 0x0f
 1c2:	98 8b       	std	Y+16, r25	; 0x10
 1c4:	a9 8b       	std	Y+17, r26	; 0x11
 1c6:	ba 8b       	std	Y+18, r27	; 0x12

000001c8 <.LBB30>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	4a e7       	ldi	r20, 0x7A	; 122
 1ce:	55 e4       	ldi	r21, 0x45	; 69
 1d0:	6f 85       	ldd	r22, Y+15	; 0x0f
 1d2:	78 89       	ldd	r23, Y+16	; 0x10
 1d4:	89 89       	ldd	r24, Y+17	; 0x11
 1d6:	9a 89       	ldd	r25, Y+18	; 0x12
 1d8:	0e 94 57 02 	call	0x4ae	; 0x4ae <__mulsf3>
 1dc:	dc 01       	movw	r26, r24
 1de:	cb 01       	movw	r24, r22
 1e0:	8b 8b       	std	Y+19, r24	; 0x13
 1e2:	9c 8b       	std	Y+20, r25	; 0x14
 1e4:	ad 8b       	std	Y+21, r26	; 0x15
 1e6:	be 8b       	std	Y+22, r27	; 0x16

000001e8 <.Loc.32>:
	if (__tmp < 1.0)
 1e8:	20 e0       	ldi	r18, 0x00	; 0
 1ea:	30 e0       	ldi	r19, 0x00	; 0
 1ec:	40 e8       	ldi	r20, 0x80	; 128
 1ee:	5f e3       	ldi	r21, 0x3F	; 63
 1f0:	6b 89       	ldd	r22, Y+19	; 0x13
 1f2:	7c 89       	ldd	r23, Y+20	; 0x14
 1f4:	8d 89       	ldd	r24, Y+21	; 0x15
 1f6:	9e 89       	ldd	r25, Y+22	; 0x16
 1f8:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__cmpsf2>
 1fc:	81 15       	cp	r24, r1
 1fe:	2c f4       	brge	.+10     	; 0x20a <.L35>

00000200 <.Loc.33>:
		__ticks = 1;
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	98 8f       	std	Y+24, r25	; 0x18
 206:	8f 8b       	std	Y+23, r24	; 0x17
 208:	40 c0       	rjmp	.+128    	; 0x28a <.L12>

0000020a <.L35>:
	else if (__tmp > 65535)
 20a:	20 e0       	ldi	r18, 0x00	; 0
 20c:	3f ef       	ldi	r19, 0xFF	; 255
 20e:	4f e7       	ldi	r20, 0x7F	; 127
 210:	57 e4       	ldi	r21, 0x47	; 71
 212:	6b 89       	ldd	r22, Y+19	; 0x13
 214:	7c 89       	ldd	r23, Y+20	; 0x14
 216:	8d 89       	ldd	r24, Y+21	; 0x15
 218:	9e 89       	ldd	r25, Y+22	; 0x16
 21a:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__gesf2>
 21e:	81 30       	cpi	r24, 0x01	; 1
 220:	54 f1       	brlt	.+84     	; 0x276 <.L36>

00000222 <.Loc.35>:
		__ticks = (uint16_t) (__ms * 10.0);
 222:	20 e0       	ldi	r18, 0x00	; 0
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	40 e2       	ldi	r20, 0x20	; 32
 228:	51 e4       	ldi	r21, 0x41	; 65
 22a:	6f 85       	ldd	r22, Y+15	; 0x0f
 22c:	78 89       	ldd	r23, Y+16	; 0x10
 22e:	89 89       	ldd	r24, Y+17	; 0x11
 230:	9a 89       	ldd	r25, Y+18	; 0x12
 232:	0e 94 57 02 	call	0x4ae	; 0x4ae <__mulsf3>
 236:	dc 01       	movw	r26, r24
 238:	cb 01       	movw	r24, r22

0000023a <.Loc.36>:
 23a:	bc 01       	movw	r22, r24
 23c:	cd 01       	movw	r24, r26
 23e:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fixunssfsi>
 242:	dc 01       	movw	r26, r24
 244:	cb 01       	movw	r24, r22
 246:	98 8f       	std	Y+24, r25	; 0x18
 248:	8f 8b       	std	Y+23, r24	; 0x17

0000024a <.Loc.37>:
		while(__ticks)
 24a:	10 c0       	rjmp	.+32     	; 0x26c <.L15>

0000024c <.L16>:
 24c:	80 e9       	ldi	r24, 0x90	; 144
 24e:	91 e0       	ldi	r25, 0x01	; 1
 250:	9a 8f       	std	Y+26, r25	; 0x1a
 252:	89 8f       	std	Y+25, r24	; 0x19

00000254 <.LBB32>:
 254:	89 8d       	ldd	r24, Y+25	; 0x19
 256:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000258 <.L1^B3>:
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <.L1^B3>
 25c:	9a 8f       	std	Y+26, r25	; 0x1a
 25e:	89 8f       	std	Y+25, r24	; 0x19

00000260 <.Loc.39>:
	...

00000262 <.LBE32>:
			__ticks --;
 262:	8f 89       	ldd	r24, Y+23	; 0x17
 264:	98 8d       	ldd	r25, Y+24	; 0x18
 266:	01 97       	sbiw	r24, 0x01	; 1
 268:	98 8f       	std	Y+24, r25	; 0x18
 26a:	8f 8b       	std	Y+23, r24	; 0x17

0000026c <.L15>:
		while(__ticks)
 26c:	8f 89       	ldd	r24, Y+23	; 0x17
 26e:	98 8d       	ldd	r25, Y+24	; 0x18
 270:	00 97       	sbiw	r24, 0x00	; 0
 272:	61 f7       	brne	.-40     	; 0x24c <.L16>

00000274 <.Loc.42>:
		return;
 274:	15 c0       	rjmp	.+42     	; 0x2a0 <.L17>

00000276 <.L36>:
		__ticks = (uint16_t)__tmp;
 276:	6b 89       	ldd	r22, Y+19	; 0x13
 278:	7c 89       	ldd	r23, Y+20	; 0x14
 27a:	8d 89       	ldd	r24, Y+21	; 0x15
 27c:	9e 89       	ldd	r25, Y+22	; 0x16
 27e:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fixunssfsi>
 282:	dc 01       	movw	r26, r24
 284:	cb 01       	movw	r24, r22
 286:	98 8f       	std	Y+24, r25	; 0x18
 288:	8f 8b       	std	Y+23, r24	; 0x17

0000028a <.L12>:
 28a:	8f 89       	ldd	r24, Y+23	; 0x17
 28c:	98 8d       	ldd	r25, Y+24	; 0x18
 28e:	9c 8f       	std	Y+28, r25	; 0x1c
 290:	8b 8f       	std	Y+27, r24	; 0x1b

00000292 <.LBB34>:
 292:	8b 8d       	ldd	r24, Y+27	; 0x1b
 294:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000296 <.L1^B4>:
 296:	01 97       	sbiw	r24, 0x01	; 1
 298:	f1 f7       	brne	.-4      	; 0x296 <.L1^B4>
 29a:	9c 8f       	std	Y+28, r25	; 0x1c
 29c:	8b 8f       	std	Y+27, r24	; 0x1b

0000029e <.Loc.45>:
	...

000002a0 <.L17>:
		_delay_ms(500);

		PORTC = (PORTC & 0xF8) | 0x04;   // Turn on the third led only (PC0=0,PC1=0,PC2=1)
 2a0:	85 e3       	ldi	r24, 0x35	; 53
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	fc 01       	movw	r30, r24
 2a6:	80 81       	ld	r24, Z

000002a8 <.Loc.47>:
 2a8:	88 7f       	andi	r24, 0xF8	; 248

000002aa <.Loc.48>:
 2aa:	28 2f       	mov	r18, r24
 2ac:	24 60       	ori	r18, 0x04	; 4

000002ae <.Loc.49>:
 2ae:	85 e3       	ldi	r24, 0x35	; 53
 2b0:	90 e0       	ldi	r25, 0x00	; 0

000002b2 <.Loc.50>:
 2b2:	fc 01       	movw	r30, r24
 2b4:	20 83       	st	Z, r18
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	aa ef       	ldi	r26, 0xFA	; 250
 2bc:	b3 e4       	ldi	r27, 0x43	; 67
 2be:	89 83       	std	Y+1, r24	; 0x01
 2c0:	9a 83       	std	Y+2, r25	; 0x02
 2c2:	ab 83       	std	Y+3, r26	; 0x03
 2c4:	bc 83       	std	Y+4, r27	; 0x04

000002c6 <.LBB36>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 2c6:	20 e0       	ldi	r18, 0x00	; 0
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	4a e7       	ldi	r20, 0x7A	; 122
 2cc:	55 e4       	ldi	r21, 0x45	; 69
 2ce:	69 81       	ldd	r22, Y+1	; 0x01
 2d0:	7a 81       	ldd	r23, Y+2	; 0x02
 2d2:	8b 81       	ldd	r24, Y+3	; 0x03
 2d4:	9c 81       	ldd	r25, Y+4	; 0x04
 2d6:	0e 94 57 02 	call	0x4ae	; 0x4ae <__mulsf3>
 2da:	dc 01       	movw	r26, r24
 2dc:	cb 01       	movw	r24, r22
 2de:	8d 83       	std	Y+5, r24	; 0x05
 2e0:	9e 83       	std	Y+6, r25	; 0x06
 2e2:	af 83       	std	Y+7, r26	; 0x07
 2e4:	b8 87       	std	Y+8, r27	; 0x08

000002e6 <.Loc.52>:
	if (__tmp < 1.0)
 2e6:	20 e0       	ldi	r18, 0x00	; 0
 2e8:	30 e0       	ldi	r19, 0x00	; 0
 2ea:	40 e8       	ldi	r20, 0x80	; 128
 2ec:	5f e3       	ldi	r21, 0x3F	; 63
 2ee:	6d 81       	ldd	r22, Y+5	; 0x05
 2f0:	7e 81       	ldd	r23, Y+6	; 0x06
 2f2:	8f 81       	ldd	r24, Y+7	; 0x07
 2f4:	98 85       	ldd	r25, Y+8	; 0x08
 2f6:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__cmpsf2>
 2fa:	81 15       	cp	r24, r1
 2fc:	2c f4       	brge	.+10     	; 0x308 <.L37>

000002fe <.Loc.53>:
		__ticks = 1;
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	9a 87       	std	Y+10, r25	; 0x0a
 304:	89 87       	std	Y+9, r24	; 0x09
 306:	40 c0       	rjmp	.+128    	; 0x388 <.L20>

00000308 <.L37>:
	else if (__tmp > 65535)
 308:	20 e0       	ldi	r18, 0x00	; 0
 30a:	3f ef       	ldi	r19, 0xFF	; 255
 30c:	4f e7       	ldi	r20, 0x7F	; 127
 30e:	57 e4       	ldi	r21, 0x47	; 71
 310:	6d 81       	ldd	r22, Y+5	; 0x05
 312:	7e 81       	ldd	r23, Y+6	; 0x06
 314:	8f 81       	ldd	r24, Y+7	; 0x07
 316:	98 85       	ldd	r25, Y+8	; 0x08
 318:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__gesf2>
 31c:	81 30       	cpi	r24, 0x01	; 1
 31e:	54 f1       	brlt	.+84     	; 0x374 <.L38>

00000320 <.Loc.55>:
		__ticks = (uint16_t) (__ms * 10.0);
 320:	20 e0       	ldi	r18, 0x00	; 0
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	40 e2       	ldi	r20, 0x20	; 32
 326:	51 e4       	ldi	r21, 0x41	; 65
 328:	69 81       	ldd	r22, Y+1	; 0x01
 32a:	7a 81       	ldd	r23, Y+2	; 0x02
 32c:	8b 81       	ldd	r24, Y+3	; 0x03
 32e:	9c 81       	ldd	r25, Y+4	; 0x04
 330:	0e 94 57 02 	call	0x4ae	; 0x4ae <__mulsf3>
 334:	dc 01       	movw	r26, r24
 336:	cb 01       	movw	r24, r22

00000338 <.Loc.56>:
 338:	bc 01       	movw	r22, r24
 33a:	cd 01       	movw	r24, r26
 33c:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fixunssfsi>
 340:	dc 01       	movw	r26, r24
 342:	cb 01       	movw	r24, r22
 344:	9a 87       	std	Y+10, r25	; 0x0a
 346:	89 87       	std	Y+9, r24	; 0x09

00000348 <.Loc.57>:
		while(__ticks)
 348:	10 c0       	rjmp	.+32     	; 0x36a <.L23>

0000034a <.L24>:
 34a:	80 e9       	ldi	r24, 0x90	; 144
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	9c 87       	std	Y+12, r25	; 0x0c
 350:	8b 87       	std	Y+11, r24	; 0x0b

00000352 <.LBB38>:
 352:	8b 85       	ldd	r24, Y+11	; 0x0b
 354:	9c 85       	ldd	r25, Y+12	; 0x0c

00000356 <.L1^B5>:
 356:	01 97       	sbiw	r24, 0x01	; 1
 358:	f1 f7       	brne	.-4      	; 0x356 <.L1^B5>
 35a:	9c 87       	std	Y+12, r25	; 0x0c
 35c:	8b 87       	std	Y+11, r24	; 0x0b

0000035e <.Loc.59>:
	...

00000360 <.LBE38>:
			__ticks --;
 360:	89 85       	ldd	r24, Y+9	; 0x09
 362:	9a 85       	ldd	r25, Y+10	; 0x0a
 364:	01 97       	sbiw	r24, 0x01	; 1
 366:	9a 87       	std	Y+10, r25	; 0x0a
 368:	89 87       	std	Y+9, r24	; 0x09

0000036a <.L23>:
		while(__ticks)
 36a:	89 85       	ldd	r24, Y+9	; 0x09
 36c:	9a 85       	ldd	r25, Y+10	; 0x0a
 36e:	00 97       	sbiw	r24, 0x00	; 0
 370:	61 f7       	brne	.-40     	; 0x34a <.L24>

00000372 <.Loc.62>:
		return;
 372:	15 c0       	rjmp	.+42     	; 0x39e <.L25>

00000374 <.L38>:
		__ticks = (uint16_t)__tmp;
 374:	6d 81       	ldd	r22, Y+5	; 0x05
 376:	7e 81       	ldd	r23, Y+6	; 0x06
 378:	8f 81       	ldd	r24, Y+7	; 0x07
 37a:	98 85       	ldd	r25, Y+8	; 0x08
 37c:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fixunssfsi>
 380:	dc 01       	movw	r26, r24
 382:	cb 01       	movw	r24, r22
 384:	9a 87       	std	Y+10, r25	; 0x0a
 386:	89 87       	std	Y+9, r24	; 0x09

00000388 <.L20>:
 388:	89 85       	ldd	r24, Y+9	; 0x09
 38a:	9a 85       	ldd	r25, Y+10	; 0x0a
 38c:	9e 87       	std	Y+14, r25	; 0x0e
 38e:	8d 87       	std	Y+13, r24	; 0x0d

00000390 <.LBB40>:
 390:	8d 85       	ldd	r24, Y+13	; 0x0d
 392:	9e 85       	ldd	r25, Y+14	; 0x0e

00000394 <.L1^B6>:
 394:	01 97       	sbiw	r24, 0x01	; 1
 396:	f1 f7       	brne	.-4      	; 0x394 <.L1^B6>
 398:	9e 87       	std	Y+14, r25	; 0x0e
 39a:	8d 87       	std	Y+13, r24	; 0x0d

0000039c <.Loc.65>:
	...

0000039e <.L25>:
		PORTC = (PORTC & 0xF8) | 0x01;   // Turn on the first led only (PC0=1,PC1=0,PC2=0)
 39e:	00 00       	nop
 3a0:	81 ce       	rjmp	.-766    	; 0xa4 <.L26>

000003a2 <__cmpsf2>:
 3a2:	0e 94 05 02 	call	0x40a	; 0x40a <__fp_cmp>
 3a6:	08 f4       	brcc	.+2      	; 0x3aa <.L1^B1>
 3a8:	81 e0       	ldi	r24, 0x01	; 1

000003aa <.L1^B1>:
 3aa:	08 95       	ret

000003ac <__fixunssfsi>:
 3ac:	0e 94 31 02 	call	0x462	; 0x462 <__fp_splitA>
 3b0:	88 f0       	brcs	.+34     	; 0x3d4 <.L_err>
 3b2:	9f 57       	subi	r25, 0x7F	; 127
 3b4:	98 f0       	brcs	.+38     	; 0x3dc <.L_zr>
 3b6:	b9 2f       	mov	r27, r25
 3b8:	99 27       	eor	r25, r25
 3ba:	b7 51       	subi	r27, 0x17	; 23
 3bc:	b0 f0       	brcs	.+44     	; 0x3ea <.L4^B1>
 3be:	e1 f0       	breq	.+56     	; 0x3f8 <.L_sign>

000003c0 <.L1^B1>:
 3c0:	66 0f       	add	r22, r22
 3c2:	77 1f       	adc	r23, r23
 3c4:	88 1f       	adc	r24, r24
 3c6:	99 1f       	adc	r25, r25
 3c8:	1a f0       	brmi	.+6      	; 0x3d0 <.L2^B1>
 3ca:	ba 95       	dec	r27
 3cc:	c9 f7       	brne	.-14     	; 0x3c0 <.L1^B1>
 3ce:	14 c0       	rjmp	.+40     	; 0x3f8 <.L_sign>

000003d0 <.L2^B1>:
 3d0:	b1 30       	cpi	r27, 0x01	; 1
 3d2:	91 f0       	breq	.+36     	; 0x3f8 <.L_sign>

000003d4 <.L_err>:
 3d4:	0e 94 4b 02 	call	0x496	; 0x496 <__fp_zero>
 3d8:	b1 e0       	ldi	r27, 0x01	; 1
 3da:	08 95       	ret

000003dc <.L_zr>:
 3dc:	0c 94 4b 02 	jmp	0x496	; 0x496 <__fp_zero>

000003e0 <.L3^B1>:
 3e0:	67 2f       	mov	r22, r23
 3e2:	78 2f       	mov	r23, r24
 3e4:	88 27       	eor	r24, r24
 3e6:	b8 5f       	subi	r27, 0xF8	; 248
 3e8:	39 f0       	breq	.+14     	; 0x3f8 <.L_sign>

000003ea <.L4^B1>:
 3ea:	b9 3f       	cpi	r27, 0xF9	; 249
 3ec:	cc f3       	brlt	.-14     	; 0x3e0 <.L3^B1>

000003ee <.L5^B1>:
 3ee:	86 95       	lsr	r24
 3f0:	77 95       	ror	r23
 3f2:	67 95       	ror	r22
 3f4:	b3 95       	inc	r27
 3f6:	d9 f7       	brne	.-10     	; 0x3ee <.L5^B1>

000003f8 <.L_sign>:
 3f8:	3e f4       	brtc	.+14     	; 0x408 <.L6^B1>
 3fa:	90 95       	com	r25
 3fc:	80 95       	com	r24
 3fe:	70 95       	com	r23
 400:	61 95       	neg	r22
 402:	7f 4f       	sbci	r23, 0xFF	; 255
 404:	8f 4f       	sbci	r24, 0xFF	; 255
 406:	9f 4f       	sbci	r25, 0xFF	; 255

00000408 <.L6^B1>:
 408:	08 95       	ret

0000040a <__fp_cmp>:
 40a:	99 0f       	add	r25, r25
 40c:	00 08       	sbc	r0, r0
 40e:	55 0f       	add	r21, r21
 410:	aa 0b       	sbc	r26, r26
 412:	e0 e8       	ldi	r30, 0x80	; 128
 414:	fe ef       	ldi	r31, 0xFE	; 254
 416:	16 16       	cp	r1, r22
 418:	17 06       	cpc	r1, r23
 41a:	e8 07       	cpc	r30, r24
 41c:	f9 07       	cpc	r31, r25
 41e:	c0 f0       	brcs	.+48     	; 0x450 <.L9^B1>
 420:	12 16       	cp	r1, r18
 422:	13 06       	cpc	r1, r19
 424:	e4 07       	cpc	r30, r20
 426:	f5 07       	cpc	r31, r21
 428:	98 f0       	brcs	.+38     	; 0x450 <.L9^B1>
 42a:	62 1b       	sub	r22, r18
 42c:	73 0b       	sbc	r23, r19
 42e:	84 0b       	sbc	r24, r20
 430:	95 0b       	sbc	r25, r21
 432:	39 f4       	brne	.+14     	; 0x442 <.L1^B1>
 434:	0a 26       	eor	r0, r26
 436:	61 f0       	breq	.+24     	; 0x450 <.L9^B1>
 438:	23 2b       	or	r18, r19
 43a:	24 2b       	or	r18, r20
 43c:	25 2b       	or	r18, r21
 43e:	21 f4       	brne	.+8      	; 0x448 <.L2^B1>
 440:	08 95       	ret

00000442 <.L1^B1>:
 442:	0a 26       	eor	r0, r26
 444:	09 f4       	brne	.+2      	; 0x448 <.L2^B1>
 446:	a1 40       	sbci	r26, 0x01	; 1

00000448 <.L2^B1>:
 448:	a6 95       	lsr	r26
 44a:	8f ef       	ldi	r24, 0xFF	; 255
 44c:	81 1d       	adc	r24, r1
 44e:	81 1d       	adc	r24, r1

00000450 <.L9^B1>:
 450:	08 95       	ret

00000452 <__fp_split3>:
 452:	57 fd       	sbrc	r21, 7
 454:	90 58       	subi	r25, 0x80	; 128
 456:	44 0f       	add	r20, r20
 458:	55 1f       	adc	r21, r21
 45a:	59 f0       	breq	.+22     	; 0x472 <.L4^B1>
 45c:	5f 3f       	cpi	r21, 0xFF	; 255
 45e:	71 f0       	breq	.+28     	; 0x47c <.L5^B1>

00000460 <.L1^B1>:
 460:	47 95       	ror	r20

00000462 <__fp_splitA>:
 462:	88 0f       	add	r24, r24
 464:	97 fb       	bst	r25, 7
 466:	99 1f       	adc	r25, r25
 468:	61 f0       	breq	.+24     	; 0x482 <.L6^B1>
 46a:	9f 3f       	cpi	r25, 0xFF	; 255
 46c:	79 f0       	breq	.+30     	; 0x48c <.L7^B1>

0000046e <.L3^B1>:
 46e:	87 95       	ror	r24
 470:	08 95       	ret

00000472 <.L4^B1>:
 472:	12 16       	cp	r1, r18
 474:	13 06       	cpc	r1, r19
 476:	14 06       	cpc	r1, r20
 478:	55 1f       	adc	r21, r21
 47a:	f2 cf       	rjmp	.-28     	; 0x460 <.L1^B1>

0000047c <.L5^B1>:
 47c:	46 95       	lsr	r20
 47e:	f1 df       	rcall	.-30     	; 0x462 <__fp_splitA>
 480:	08 c0       	rjmp	.+16     	; 0x492 <.L8^B1>

00000482 <.L6^B1>:
 482:	16 16       	cp	r1, r22
 484:	17 06       	cpc	r1, r23
 486:	18 06       	cpc	r1, r24
 488:	99 1f       	adc	r25, r25
 48a:	f1 cf       	rjmp	.-30     	; 0x46e <.L3^B1>

0000048c <.L7^B1>:
 48c:	86 95       	lsr	r24
 48e:	71 05       	cpc	r23, r1
 490:	61 05       	cpc	r22, r1

00000492 <.L8^B1>:
 492:	08 94       	sec
 494:	08 95       	ret

00000496 <__fp_zero>:
 496:	e8 94       	clt

00000498 <__fp_szero>:
 498:	bb 27       	eor	r27, r27
 49a:	66 27       	eor	r22, r22
 49c:	77 27       	eor	r23, r23
 49e:	cb 01       	movw	r24, r22
 4a0:	97 f9       	bld	r25, 7
 4a2:	08 95       	ret

000004a4 <__gesf2>:
 4a4:	0e 94 05 02 	call	0x40a	; 0x40a <__fp_cmp>
 4a8:	08 f4       	brcc	.+2      	; 0x4ac <.L1^B1>
 4aa:	8f ef       	ldi	r24, 0xFF	; 255

000004ac <.L1^B1>:
 4ac:	08 95       	ret

000004ae <__mulsf3>:
 4ae:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__mulsf3x>
 4b2:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <__fp_round>

000004b6 <.L0^B1>:
 4b6:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_pscA>
 4ba:	38 f0       	brcs	.+14     	; 0x4ca <.L1^B1>
 4bc:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_pscB>
 4c0:	20 f0       	brcs	.+8      	; 0x4ca <.L1^B1>
 4c2:	95 23       	and	r25, r21
 4c4:	11 f0       	breq	.+4      	; 0x4ca <.L1^B1>
 4c6:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_inf>

000004ca <.L1^B1>:
 4ca:	0c 94 ca 02 	jmp	0x594	; 0x594 <__fp_nan>

000004ce <.L2^B1>:
 4ce:	11 24       	eor	r1, r1
 4d0:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_szero>

000004d4 <__mulsf3x>:
 4d4:	0e 94 29 02 	call	0x452	; 0x452 <__fp_split3>
 4d8:	70 f3       	brcs	.-36     	; 0x4b6 <.L0^B1>

000004da <__mulsf3_pse>:
 4da:	95 9f       	mul	r25, r21
 4dc:	c1 f3       	breq	.-16     	; 0x4ce <.L2^B1>
 4de:	95 0f       	add	r25, r21
 4e0:	50 e0       	ldi	r21, 0x00	; 0
 4e2:	55 1f       	adc	r21, r21
 4e4:	62 9f       	mul	r22, r18
 4e6:	f0 01       	movw	r30, r0
 4e8:	72 9f       	mul	r23, r18
 4ea:	bb 27       	eor	r27, r27
 4ec:	f0 0d       	add	r31, r0
 4ee:	b1 1d       	adc	r27, r1
 4f0:	63 9f       	mul	r22, r19
 4f2:	aa 27       	eor	r26, r26
 4f4:	f0 0d       	add	r31, r0
 4f6:	b1 1d       	adc	r27, r1
 4f8:	aa 1f       	adc	r26, r26
 4fa:	64 9f       	mul	r22, r20
 4fc:	66 27       	eor	r22, r22
 4fe:	b0 0d       	add	r27, r0
 500:	a1 1d       	adc	r26, r1
 502:	66 1f       	adc	r22, r22
 504:	82 9f       	mul	r24, r18
 506:	22 27       	eor	r18, r18
 508:	b0 0d       	add	r27, r0
 50a:	a1 1d       	adc	r26, r1
 50c:	62 1f       	adc	r22, r18
 50e:	73 9f       	mul	r23, r19
 510:	b0 0d       	add	r27, r0
 512:	a1 1d       	adc	r26, r1
 514:	62 1f       	adc	r22, r18
 516:	83 9f       	mul	r24, r19
 518:	a0 0d       	add	r26, r0
 51a:	61 1d       	adc	r22, r1
 51c:	22 1f       	adc	r18, r18
 51e:	74 9f       	mul	r23, r20
 520:	33 27       	eor	r19, r19
 522:	a0 0d       	add	r26, r0
 524:	61 1d       	adc	r22, r1
 526:	23 1f       	adc	r18, r19
 528:	84 9f       	mul	r24, r20
 52a:	60 0d       	add	r22, r0
 52c:	21 1d       	adc	r18, r1
 52e:	82 2f       	mov	r24, r18
 530:	76 2f       	mov	r23, r22
 532:	6a 2f       	mov	r22, r26
 534:	11 24       	eor	r1, r1
 536:	9f 57       	subi	r25, 0x7F	; 127
 538:	50 40       	sbci	r21, 0x00	; 0
 53a:	9a f0       	brmi	.+38     	; 0x562 <.L13^B1>
 53c:	f1 f0       	breq	.+60     	; 0x57a <.L15^B1>

0000053e <.L10^B1>:
 53e:	88 23       	and	r24, r24
 540:	4a f0       	brmi	.+18     	; 0x554 <.L11^B1>
 542:	ee 0f       	add	r30, r30
 544:	ff 1f       	adc	r31, r31
 546:	bb 1f       	adc	r27, r27
 548:	66 1f       	adc	r22, r22
 54a:	77 1f       	adc	r23, r23
 54c:	88 1f       	adc	r24, r24
 54e:	91 50       	subi	r25, 0x01	; 1
 550:	50 40       	sbci	r21, 0x00	; 0
 552:	a9 f7       	brne	.-22     	; 0x53e <.L10^B1>

00000554 <.L11^B1>:
 554:	9e 3f       	cpi	r25, 0xFE	; 254
 556:	51 05       	cpc	r21, r1
 558:	80 f0       	brcs	.+32     	; 0x57a <.L15^B1>
 55a:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_inf>

0000055e <.L12^B1>:
 55e:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_szero>

00000562 <.L13^B1>:
 562:	5f 3f       	cpi	r21, 0xFF	; 255
 564:	e4 f3       	brlt	.-8      	; 0x55e <.L12^B1>
 566:	98 3e       	cpi	r25, 0xE8	; 232
 568:	d4 f3       	brlt	.-12     	; 0x55e <.L12^B1>

0000056a <.L14^B1>:
 56a:	86 95       	lsr	r24
 56c:	77 95       	ror	r23
 56e:	67 95       	ror	r22
 570:	b7 95       	ror	r27
 572:	f7 95       	ror	r31
 574:	e7 95       	ror	r30
 576:	9f 5f       	subi	r25, 0xFF	; 255
 578:	c1 f7       	brne	.-16     	; 0x56a <.L14^B1>

0000057a <.L15^B1>:
 57a:	fe 2b       	or	r31, r30
 57c:	88 0f       	add	r24, r24
 57e:	91 1d       	adc	r25, r1
 580:	96 95       	lsr	r25
 582:	87 95       	ror	r24
 584:	97 f9       	bld	r25, 7
 586:	08 95       	ret

00000588 <__fp_inf>:
 588:	97 f9       	bld	r25, 7
 58a:	9f 67       	ori	r25, 0x7F	; 127
 58c:	80 e8       	ldi	r24, 0x80	; 128
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	60 e0       	ldi	r22, 0x00	; 0
 592:	08 95       	ret

00000594 <__fp_nan>:
 594:	9f ef       	ldi	r25, 0xFF	; 255
 596:	80 ec       	ldi	r24, 0xC0	; 192
 598:	08 95       	ret

0000059a <__fp_pscA>:
 59a:	00 24       	eor	r0, r0
 59c:	0a 94       	dec	r0
 59e:	16 16       	cp	r1, r22
 5a0:	17 06       	cpc	r1, r23
 5a2:	18 06       	cpc	r1, r24
 5a4:	09 06       	cpc	r0, r25
 5a6:	08 95       	ret

000005a8 <__fp_pscB>:
 5a8:	00 24       	eor	r0, r0
 5aa:	0a 94       	dec	r0
 5ac:	12 16       	cp	r1, r18
 5ae:	13 06       	cpc	r1, r19
 5b0:	14 06       	cpc	r1, r20
 5b2:	05 06       	cpc	r0, r21
 5b4:	08 95       	ret

000005b6 <__fp_round>:
 5b6:	09 2e       	mov	r0, r25
 5b8:	03 94       	inc	r0
 5ba:	00 0c       	add	r0, r0
 5bc:	11 f4       	brne	.+4      	; 0x5c2 <.L1^B1>
 5be:	88 23       	and	r24, r24
 5c0:	52 f0       	brmi	.+20     	; 0x5d6 <.L3^B1>

000005c2 <.L1^B1>:
 5c2:	bb 0f       	add	r27, r27
 5c4:	40 f4       	brcc	.+16     	; 0x5d6 <.L3^B1>
 5c6:	bf 2b       	or	r27, r31
 5c8:	11 f4       	brne	.+4      	; 0x5ce <.L2^B1>
 5ca:	60 ff       	sbrs	r22, 0
 5cc:	04 c0       	rjmp	.+8      	; 0x5d6 <.L3^B1>

000005ce <.L2^B1>:
 5ce:	6f 5f       	subi	r22, 0xFF	; 255
 5d0:	7f 4f       	sbci	r23, 0xFF	; 255
 5d2:	8f 4f       	sbci	r24, 0xFF	; 255
 5d4:	9f 4f       	sbci	r25, 0xFF	; 255

000005d6 <.L3^B1>:
 5d6:	08 95       	ret

000005d8 <_exit>:
 5d8:	f8 94       	cli

000005da <__stop_program>:
 5da:	ff cf       	rjmp	.-2      	; 0x5da <__stop_program>
